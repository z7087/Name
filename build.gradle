import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
    def generateClasses = tasks.register("generateClasses", GenerateClasses) {
    }
    generateClasses.get().create()
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '8.3.0'
}


group = 'me.z7087.name'
version = '1.0-SNAPSHOT'

targetCompatibility = '1.6'
sourceCompatibility = '1.6'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.ow2.asm:asm:9.7'

    compileOnly project(":compileonly")

    implementation files(getProject().file("generated-classes/generated-classes.jar"))
}

tasks.register("shadowNormalJar", ShadowJar) {
    minimize()
    archiveFileName.set("${project.name}-${project.version}.jar")
    dependencies {
        exclude(dependency('org.ow2.asm:asm:9.7'))
    }
}

shadowJar {
    minimize()
    archiveFileName.set("${project.name}-${project.version}-all.jar")
    relocate("org.objectweb.asm", "me.z7087.name.libs.org.objectweb.asm")
}

build {
    dependsOn(tasks.shadowNormalJar)
    dependsOn(tasks.shadowJar)
}

publishing {
    publications {
        normal(MavenPublication) {
            artifact shadowNormalJar
        }
        fatJar(MavenPublication) {
            artifactId 'Name-fatjar'
            artifact shadowJar
        }
    }
}

publishNormalPublicationToMavenLocal {
    dependsOn(tasks.shadowNormalJar)
}

publishFatJarPublicationToMavenLocal {
    dependsOn(tasks.shadowJar)
}
